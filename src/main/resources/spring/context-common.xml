<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<context:component-scan base-package="vc">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:component-scan base-package="jksoft">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- SpEL을 사용하기 위한 Properties 선언 -->
	<util:properties id="global" location="classpath:/config/global-config.xml" />

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:/message/message-alter</value>
				<value>classpath:/message/message-exception</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

	<bean id="xMessageSource" class="jksoft.com.support.XMessageSource">
		<property name="reloadableResourceBundleMessageSource">
			<ref bean="messageSource" />
		</property>
	</bean>

	<!-- =========================================================================== -->
    <!-- Scheduler
         [task:executor] 의 옵션
         - pool-size :  쓰레드 풀의 개수 지정   
         - queue-capacity : 작업이 저장되는 큐의 최대 크기, 풀의 쓰레드가 모두 작업을 실행중인 경우 큐에서 대기, 기본값은 Integer.MAX_VALUE
         - keep-alive : 풀에 있는 쓰레드의 최대 유휴시간. 이 시간 동안 새로운 작업을 실행하지 않으면 풀에서 제거. 단위는 초
         - rejection-policy : 큐가 다 차서 더이상 작업을 받을 수 없을때 작업을 어떻게 처리할지를 결정. 기본값은 ABORT.
                              ABORT - 작업을 거부하고 예외를 발생
                              CALLER_RUNS - 호출한 쓰레드를 이용해서 실행
                              DISCARD - 작업을 실행하지 않고 무시
                              DISCARD_OLDEST - 큐의 헤드에서 하나를 제거하고 작업을 추가
    -->
	<!-- =========================================================================== -->
<!-- 	<context:component-scan base-package="jksoft.com.schedule" /> -->
<!-- 	<task:executor id="scheduleExecutor" pool-size="5" queue-capacity="10"/> -->
<!-- 	<task:scheduler id="ScheduledJobLauncher" /> -->
<!-- 	<task:annotation-driven scheduler="ScheduledJobLauncher" executor="scheduleExecutor"/> -->

</beans>
