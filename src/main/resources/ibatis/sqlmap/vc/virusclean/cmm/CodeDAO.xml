<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<!-- 
	SQL File Name : CodeDAO.xml 
	Description : 공통코드 DAO author 
-->

<sqlMap namespace="virus_clean_cmm_CodeDAO">
	<typeAlias alias="codeVO" type="vc.virusclean.cmm.vo.CodeVO" />
	<typeAlias alias="codeEnvVO" type="vc.virusclean.cmm.vo.CodeEnvVO" />
	

	<!--
        Query Name  : codeDAO.selectCodeCount
        Description : 부모공통코드로 하위 공통코드 ROW수를 조회한다.
    --> 
    <select id="codeDAO.selectCodeCount" parameterClass="codeVO" resultClass="int">
        <![CDATA[
			/* ProgramID=codeDAO.selectCodeCount */
            SELECT COUNT(1)
              FROM VC_COM_01
             WHERE PREN_COM_CD = UPPER(#prenComCd#)
               AND USE_YN = 'Y'
        ]]>
        
        <dynamic>
            <isEqual property="searchType" compareValue="A">
                <isNotEmpty property="lSelectCd">       
                    <iterate property="lSelectCd" prepend="AND COM_CD IN" open="(" close=")" conjunction=",">
                        #lSelectCd[]#
                    </iterate>
                </isNotEmpty>
            </isEqual>
            <isEqual property="searchType" compareValue="B">
                <isNotEmpty property="lSelectCd">       
                    <iterate property="lSelectCd" prepend="AND COM_CD NOT IN" open="(" close=")" conjunction=",">
                        #lSelectCd[]#
                    </iterate>
                </isNotEmpty>
            </isEqual>
        </dynamic>
    </select>


    <!--
        Query Name  : codeDAO.selectCodeList
        Description : 부모공통코드로 하위 공통코드 목록을 조회한다.
    --> 
    <select id="codeDAO.selectCodeList" parameterClass="codeVO" resultClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.selectCodeList */
            SELECT COM_CD comCd
                 , PREN_COM_CD prenComCd
                 , COM_CD_NM comCdNm
                 , COM_CD_EXPL comCdExpl
              FROM VC_COM_01
             WHERE PREN_COM_CD = UPPER(#prenComCd#)
               AND USE_YN = 'Y'
        ]]>
        
        <dynamic>
            <isEqual property="searchType" compareValue="A">
                <isNotEmpty property="lSelectCd">       
                    <iterate property="lSelectCd" prepend="AND COM_CD IN" open="(" close=")" conjunction=",">
                        #lSelectCd[]#
                    </iterate>
                </isNotEmpty>
            </isEqual>
            <isEqual property="searchType" compareValue="B">
                <isNotEmpty property="lSelectCd">       
                    <iterate property="lSelectCd" prepend="AND COM_CD NOT IN" open="(" close=")" conjunction=",">
                        #lSelectCd[]#
                    </iterate>
                </isNotEmpty>
            </isEqual>
        </dynamic>
        
        <![CDATA[
             ORDER BY ST_NO, COM_CD
        ]]>
    </select>
    
    
    <!--
        Query Name  : codeDAO.selectCodeCateList
        Description : 부모공통코드로 하위 공통코드 목록을 조회한다.
    --> 
    <select id="codeDAO.selectCodeCateList" resultClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.selectCodeCateList */
            SELECT COM_CD_SN comCdSn
				 , COM_CD comCd
				 , PREN_CD_SN prenCdSn
				 , PREN_COM_CD prenComCd
				 , COM_CD_NM comCdNm
				 , ST_NO stNo
				 , DEPTH depth        
			  FROM (
				SELECT COM_CD_SN, 0 PREN_CD_SN, COM_CD, COM_CD_NM, PREN_COM_CD, ST_NO, 1 DEPTH
				  FROM VC_COM_01
				 WHERE USE_YN = 'Y' 
				   AND PREN_COM_CD ='PRODUCT-CATE' 
				UNION
				SELECT A.COM_CD_SN, B.COM_CD_SN PREN_CD_SN, A.COM_CD, A.COM_CD_NM, A.PREN_COM_CD, CONCAT(B.ST_NO, '-', A.ST_NO) ST_NO, 2 DEPTH
				  FROM VC_COM_01 A 
					   INNER JOIN VC_COM_01 B ON A.PREN_COM_CD = B.COM_CD 
				 WHERE A.USE_YN = 'Y'
				   AND B.USE_YN = 'Y'
				   AND B.PREN_COM_CD ='PRODUCT-CATE'
			) A 
			ORDER BY ST_NO
        ]]>
    </select>
    
    
    <!--
        Query Name  : codeDAO.selectCode
        Description : 상세정보 조회한다.
    --> 
	<select id="codeDAO.selectCode" parameterClass="codeVO" resultClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.selectCode */
            SELECT COM_CD comCd
           		 , PREN_COM_CD prenComCd
           		 , COM_CD_NM comCdNm
			  FROM VC_COM_01
			 WHERE USE_YN = 'Y'
			   AND COM_CD = #comCd#
        ]]>
	</select>
	
	
	<!-- 
		Query Name : codeDAO.updateCode
		Description : 정보를 수정한다.
	-->
	<update id="codeDAO.updateCode" parameterClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.updateCode */ 
            UPDATE VC_COM_01
               SET COM_CD_NM = #comCdNm#
                 , MDFY_ID = #mdfyId#
                 , MDFY_DTM = NOW()
             WHERE 1 = 1
        ]]>
        <isNotEmpty property="comCd"> 
        	<![CDATA[	AND  COM_CD = #comCd#		]]>
        </isNotEmpty>
        <isNotEqual property="comCdSn" compareValue="0">
        	<![CDATA[	AND  COM_CD_SN = #comCdSn#		]]>
        </isNotEqual>
	</update>
	
	
	<!--
        Query Name  : codeDAO.selectCodePreferences
        Description : 사이트 설정 정보 조회한다.
    --> 
	<select id="codeDAO.selectCodePreferences" resultClass="codeEnvVO">
        <![CDATA[
			/* ProgramID=codeDAO.selectCodePreferences */
            SELECT
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'COUPON-WELCOM') AS couponWelcom,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'COUPON-YN') AS couponYn,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'DELIVERY-DATE') AS deliveryDate,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'DELIVERY-FREE') AS deliveryFree,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'DELIVERY-MIN') AS deliveryMin,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'DELIVERY-YN') AS deliveryYn,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'MEMBER-OUTDEL') AS memberOutdel,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'MEMBER-OUTID') AS memberOutid,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'SITE-DESC') AS siteDesc,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'SITE-KEYWORD') AS siteKeyword,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'SITE-NAME') AS siteName,
			   (SELECT  COM_CD_NM  FROM VC_COM_01 WHERE COM_CD  = 'SITE-TITLE') AS siteTitle
			WHERE 1 = 1
        ]]>
	</select>
	
	
	
	<!--
        Query Name  : codeDAO.selectCategoryList
        Description : 상품카테고리 목록 조회
    --> 
    <select id="codeDAO.selectCategoryList" parameterClass="codeVO" resultClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.selectCodeList */
            SELECT COM_CD_SN comCdSn
                 , COM_CD comCd
                 , PREN_CD_SN prenCdSn
                 , PREN_COM_CD prenComCd
                 , ST_NO stNo
                 , DEPTH depth        
              FROM (
                SELECT COM_CD_SN, 0 PREN_CD_SN, COM_CD, PREN_COM_CD, ST_NO, 1 DEPTH
                  FROM VC_COM_01
                 WHERE USE_YN = 'Y' 
                   AND PREN_COM_CD ='PRODUCT-CATE' 
                UNION
                SELECT A.COM_CD_SN, B.COM_CD_SN PREN_CD_SN, A.COM_CD, A.PREN_COM_CD, CONCAT(B.ST_NO, '-', A.ST_NO) ST_NO, 2 DEPTH
                  FROM VC_COM_01 A 
                       INNER JOIN VC_COM_01 B ON A.PREN_COM_CD = B.COM_CD 
                 WHERE A.USE_YN = 'Y'
                   AND B.USE_YN = 'Y'
                   AND B.PREN_COM_CD ='PRODUCT-CATE'
            ) A 
            ORDER BY ST_NO
        ]]>
    </select>
    
    
    <!--
        Query Name  : codeDAO.selectCategoryCodeCount
        Description : 코드 중복 확인
    --> 
    <select id="codeDAO.selectCategoryCodeCount" parameterClass="codeVO" resultClass="int">
        <![CDATA[
			/* ProgramID=codeDAO.selectCategoryCodeCount */
            SELECT COUNT(1)
              FROM VC_COM_01
             WHERE PREN_COM_CD = UPPER(#prenComCd#)
               ANA COM_CD = UPPER(#comCd#)
               AND USE_YN = 'Y'
        ]]>      
    </select>
    
    
    <!-- 
		Query Name : codeDAO.updateUseYn
		Description : 상태코드 변경 
						- Y:사용, N:사용중지, D:삭제
	-->
	<update id="codeDAO.updateUseYn" parameterClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.updateUseYn */ 
            UPDATE VC_COM_01
               SET USE_YN = #useYn#
                 , MDFY_ID = #mdfyId#
                 , MDFY_DTM = NOW()
             WHERE COM_CD_SN = #comCdSn#
        ]]>
	</update>
	
	
	<!-- 
		Query Name : codeDAO.insertCode
		Description : 코드 정보 등록
	-->
	<insert id="codeDAO.insertCode" parameterClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.insertCode */ 
            INSERT INTO VC_COM_01
                   (
					  COM_CD
	                , PREN_COM_CD
	                , COM_CD_NM
	                , COM_CD_EXPL
	                , ST_NO
	                , RGST_ID
	                , RGST_DTM
				   )
            VALUES ( 
					  #comCd#
					, #prenComCd#
					, #comCdNm#
					, #comCdExpl#
					, #stNo#
					, #rgstId#
					, NOW()
				   )
	    ]]>
	    <selectKey resultClass="int" keyProperty="comCdSn">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
	
	
	<!-- 
		Query Name : codeDAO.insertCodeCate1
		Description : 코드 정보 등록
	-->
	<insert id="codeDAO.insertCodeCate1" parameterClass="codeVO">
		<selectKey resultClass="string" keyProperty="comCd" type="pre">
		<![CDATA[
             SELECT CONCAT('C', LPAD(COALESCE(MAX(CONVERT(SUBSTR(COM_CD, 2), UNSIGNED INTEGER )) + 1, 1), 3, '0'))
			   FROM VC_COM_01
			  WHERE PREN_COM_CD = UPPER('PRODUCT-CATE')
        ]]>
        </selectKey>
        <![CDATA[
			/* ProgramID=codeDAO.insertCodeCate1 */ 
            INSERT INTO VC_COM_01
                   (
					  COM_CD
	                , PREN_COM_CD
	                , COM_CD_NM
	                , COM_CD_EXPL
	                , ST_NO
	                , RGST_ID
	                , RGST_DTM
				   )
             SELECT #comCd#
				  , #prenComCd#
				  , #comCdNm#
				  , #comCdExpl#
				  , COUNT(1) + 1
				  , #rgstId#
				  , NOW()
    		  FROM VC_COM_01
			 WHERE PREN_COM_CD = UPPER('PRODUCT-CATE')				          
			   AND USE_YN = 'Y'  
	    ]]>
	    <selectKey resultClass="int" keyProperty="comCdSn" type="post">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
    
    
    <!-- 
		Query Name : codeDAO.insertCodeCate2
		Description : 코드 정보 등록
	-->
	<insert id="codeDAO.insertCodeCate2" parameterClass="codeVO">
		<selectKey resultClass="string" keyProperty="comCd" type="pre">
		<![CDATA[
             SELECT CONCAT(SUBSTR(UPPER(#prenComCd#), 1, 4), LPAD(COALESCE(MAX(CONVERT(SUBSTR(COM_CD, 5), UNSIGNED INTEGER )) + 1, 1), 3, '0'))
			   FROM VC_COM_01
			  WHERE PREN_COM_CD = UPPER(#prenComCd#)
        ]]>
        </selectKey>
        <![CDATA[
			/* ProgramID=codeDAO.insertCodeCate2 */ 
            INSERT INTO VC_COM_01
                   (
					  COM_CD
	                , PREN_COM_CD
	                , COM_CD_NM
	                , COM_CD_EXPL
	                , ST_NO
	                , RGST_ID
	                , RGST_DTM
				   )
			 SELECT #comCd#
				  , #prenComCd#
				  , #comCdNm#
				  , #comCdExpl#
				  , COUNT(1) + 1
				  , #rgstId#
				  , NOW()
    		  FROM VC_COM_01
			 WHERE PREN_COM_CD = UPPER(#prenComCd#)				          
			   AND USE_YN = 'Y'  
	    ]]>
	    <selectKey resultClass="int" keyProperty="comCdSn" type="post">
			SELECT LAST_INSERT_ID();
		</selectKey>
	</insert>
    
    
    <!-- 
		Query Name : codeDAO.updateCategoryCode
		Description : 정보를 수정한다.
	-->
	<update id="codeDAO.updateCategoryCode" parameterClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.updateCategoryCode */ 
            UPDATE VC_COM_01
               SET COM_CD = #comCd#
                 , COM_CD_NM = #comCdNm#
                 , MDFY_ID = #mdfyId#
                 , MDFY_DTM = NOW()
             WHERE COM_CD_SN = #comCdSn#
        ]]>
	</update>
	
	
	<!-- 
		Query Name : codeDAO.updateCategoryCodeByStNo 
		Description : 정렬순서 변경
						- Service에서 For문으로 하나씩 던져줄것.
	-->
	<update id="codeDAO.updateCategoryCodeByStNo" parameterClass="codeVO">
        <![CDATA[
			/* ProgramID=codeDAO.updateCategoryCodeByStNo  */
            UPDATE VC_COM_01
               SET ST_NO = #stNo#
             WHERE COM_CD_SN = #comCdSn#
        ]]>
	</update>
	
	
</sqlMap>